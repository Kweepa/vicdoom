;
; File generated by cc65 v 2.13.2
;
	.fopt		compiler,"cc65 v 2.13.2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank, tmp1, ptr1, ptr2
	.macpack	longbranch
	.import		_abs
	.export		_mobjinfo
	.export		_player
	.import		_P_Random
	.export		_P_ApproxDistance
	.export		_opposite
	.export		_diags
	.export		_P_CheckSight
	.export		_P_LookForPlayers
	.export		_S_StartSound
	.export		_P_SetMobjState
	.export		_P_DamageMobj
	.export		_P_RadiusAttack
	.export		_P_CheckMeleeRange
	.export		_P_CheckMissileRange
	.export		_xspeed
	.export		_yspeed
	.import		_P_TryMove
	.export		_P_Move
	.export		_P_TryWalk
	.export		_P_NewChaseDir
	.export		_A_Look
	.export		_A_Chase
	.export		_R_PointToAngle
	.export		_A_FaceTarget
	.export		_A_PosAttack
	.export		_A_TroopAttack
	.export		_A_Fall
	.export		_A_Explode

.segment	"DATA"

_opposite:
	.word	$0004
	.word	$0005
	.word	$0006
	.word	$0007
	.word	$0000
	.word	$0001
	.word	$0002
	.word	$0003
	.word	$0008
_diags:
	.word	$0003
	.word	$0001
	.word	$0005
	.word	$0007
_xspeed:
	.word	$0100
	.word	$00B5
	.word	$0000
	.word	$FF4B
	.word	$FF00
	.word	$FF4B
	.word	$0000
	.word	$00B5
_yspeed:
	.word	$0000
	.word	$00B5
	.word	$0100
	.word	$00B5
	.word	$0000
	.word	$FF4B
	.word	$FF00
	.word	$FF4B

.segment	"BSS"

_mobjinfo:
	.res	14,$00
_player:
	.res	2,$00

; ---------------------------------------------------------------
; int __near__ P_ApproxDistance (int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_ApproxDistance: near

.segment	"CODE"

	ldy     #$03
	jsr     ldaxysp
	jsr     _abs
	ldy     #$02
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	jsr     _abs
	ldy     #$00
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosltax
	jeq     L000A
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosaddax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     asrax1
	jsr     tossubax
	jmp     L0003
L000A:	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosaddax
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     asrax1
	jsr     tossubax
	jmp     L0003
L0003:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_CheckSight (__near__ struct mobj_T*, __near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_CheckSight: near

.segment	"CODE"

	ldy     #$03
	jsr     ldaxysp
	ldy     #$06
	jsr     ldauidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$06
	jsr     ldauidx
	jsr     toseqax
	jeq     L001E
	ldx     #$00
	lda     #$01
	jmp     L001D
L001E:	ldy     #$03
	jsr     ldaxysp
	ldy     #$08
	jsr     ldauidx
	ldx     #$00
	and     #$20
	stx     tmp1
	ora     tmp1
	jeq     L0021
	ldx     #$00
	lda     #$01
	jmp     L001D
L0021:	ldx     #$00
	lda     #$00
	jmp     L001D
L001D:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_LookForPlayers (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_LookForPlayers: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	lda     _player
	ldx     _player+1
	jsr     pushax
	jsr     _P_CheckSight
	tax
	jeq     L0026
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	lda     _player
	ldx     _player+1
	ldy     #$0E
	jsr     staxspidx
	ldx     #$00
	lda     #$01
	jmp     L0025
L0026:	ldx     #$00
	lda     #$00
	jmp     L0025
L0025:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ S_StartSound (__near__ struct mobj_T*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_S_StartSound: near

.segment	"CODE"

	jsr     incsp3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ P_SetMobjState (__near__ struct mobj_T*, unsigned char)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_SetMobjState: near

.segment	"CODE"

	jsr     incsp3
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ P_DamageMobj (__near__ struct mobj_T*, __near__ struct mobj_T*, __near__ struct mobj_T*, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_DamageMobj: near

.segment	"CODE"

	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0B
	jsr     ldaidx
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tossubax
	ldy     #$0B
	jsr     staspidx
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0B
	jsr     ldaidx
	sec
	sbc     #$01
	bvc     L0035
	eor     #$80
L0035:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0033
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0D
	jsr     ldauidx
	jsr     pusha
	jsr     _P_SetMobjState
	jmp     L0039
L0033:	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	ora     #$02
	ldy     #$08
	jsr     staspidx
L0039:	jsr     incsp8
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ P_RadiusAttack (__near__ struct mobj_T*, __near__ struct mobj_T*, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_RadiusAttack: near

.segment	"CODE"

	jsr     incsp6
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_CheckMeleeRange (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_CheckMeleeRange: near

.segment	"CODE"

	jsr     decsp4
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     bnegax
	jeq     L003E
	ldx     #$00
	lda     #$00
	jmp     L003D
L003E:	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$02
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	jsr     _P_ApproxDistance
	ldy     #$00
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$40
	bvs     L004A
	eor     #$80
L004A:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L0047
	ldx     #$00
	lda     #$00
	jmp     L003D
L0047:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     pushax
	jsr     _P_CheckSight
	jsr     bnega
	jeq     L004C
	ldx     #$00
	lda     #$00
	jmp     L003D
L004C:	ldx     #$00
	lda     #$01
	jmp     L003D
L003D:	jsr     incsp6
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_CheckMissileRange (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_CheckMissileRange: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     pushax
	jsr     _P_CheckSight
	jsr     bnega
	jeq     L0053
	ldx     #$00
	lda     #$00
	jmp     L0052
L0053:	ldy     #$03
	jsr     ldaxysp
	ldy     #$08
	jsr     ldauidx
	ldx     #$00
	and     #$01
	stx     tmp1
	ora     tmp1
	jeq     L0058
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	and     #$FE
	ldy     #$08
	jsr     staspidx
	ldx     #$00
	lda     #$01
	jmp     L0052
L0058:	ldy     #$03
	jsr     ldaxysp
	ldy     #$09
	jsr     ldauidx
	jeq     L005D
	ldx     #$00
	lda     #$00
	jmp     L0052
L005D:	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	jsr     _P_ApproxDistance
	jsr     pushax
	ldx     #$40
	lda     #$00
	jsr     tossubax
	ldy     #$00
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0B
	jsr     ldauidx
	jsr     bnega
	jeq     L0064
	ldx     #$80
	lda     #$00
	ldy     #$00
	jsr     subeqysp
L0064:	ldy     #$01
	jsr     ldaxysp
	ldy     #$00
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	cmp     #$C9
	txa
	sbc     #$00
	bvs     L006C
	eor     #$80
L006C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L006A
	ldx     #$00
	lda     #$C8
	ldy     #$00
	jsr     staxysp
L006A:	jsr     _P_Random
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosultax
	jeq     L006F
	ldx     #$00
	lda     #$00
	jmp     L0052
L006F:	ldx     #$00
	lda     #$01
	jmp     L0052
L0052:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_Move (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_Move: near

.segment	"CODE"

	jsr     decsp4
	ldy     #$05
	jsr     ldaxysp
	ldy     #$07
	jsr     ldauidx
	cmp     #$08
	jsr     booleq
	jeq     L0086
	ldx     #$00
	lda     #$00
	jmp     L0085
L0086:	ldy     #$05
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$00
	jsr     ldauidx
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$07
	jsr     ldauidx
	jsr     aslax1
	clc
	adc     #<(_xspeed)
	tay
	txa
	adc     #>(_xspeed)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     tosumulax
	jsr     tosaddax
	ldy     #$02
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$00
	jsr     ldauidx
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$07
	jsr     ldauidx
	jsr     aslax1
	clc
	adc     #<(_yspeed)
	tay
	txa
	adc     #>(_yspeed)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	jsr     tosumulax
	jsr     tosaddax
	ldy     #$00
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryMove
	jmp     L0085
L0085:	jsr     incsp6
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ P_TryWalk (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_TryWalk: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_Move
	jsr     bnega
	jeq     L0094
	ldx     #$00
	lda     #$00
	jmp     L0093
L0094:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_Random
	ldx     #$00
	and     #$0F
	ldy     #$0A
	jsr     staspidx
	ldx     #$00
	lda     #$01
	jmp     L0093
L0093:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ P_NewChaseDir (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_P_NewChaseDir: near

.segment	"CODE"

	ldy     #$10
	jsr     subysp
	ldy     #$11
	jsr     ldaxysp
	ldy     #$07
	jsr     ldauidx
	ldx     #$00
	ldy     #$02
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     aslax1
	clc
	adc     #<(_opposite)
	tay
	txa
	adc     #>(_opposite)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	ldy     #$00
	jsr     staxysp
	ldy     #$11
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$13
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	ldy     #$0E
	jsr     staxysp
	ldy     #$11
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$13
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	ldy     #$0C
	jsr     staxysp
	ldy     #$0F
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$0A
	bvs     L00A8
	eor     #$80
L00A8:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L00A6
	ldx     #$00
	lda     #$00
	ldy     #$08
	jsr     staxysp
	jmp     L00B3
L00A6:	ldy     #$0F
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$F6
	bvc     L00AF
	eor     #$80
L00AF:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L00AD
	ldx     #$00
	lda     #$04
	ldy     #$08
	jsr     staxysp
	jmp     L00B3
L00AD:	ldx     #$00
	lda     #$08
	ldy     #$08
	jsr     staxysp
L00B3:	ldy     #$0D
	jsr     ldaxysp
	cmp     #$00
	txa
	sbc     #$F6
	bvc     L00B9
	eor     #$80
L00B9:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L00B7
	ldx     #$00
	lda     #$06
	ldy     #$0A
	jsr     staxysp
	jmp     L00BD
L00B7:	ldy     #$0D
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$0A
	bvs     L00C0
	eor     #$80
L00C0:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L00BE
	ldx     #$00
	lda     #$02
	ldy     #$0A
	jsr     staxysp
	jmp     L00BD
L00BE:	ldx     #$00
	lda     #$08
	ldy     #$0A
	jsr     staxysp
L00BD:	ldy     #$09
	jsr     ldaxysp
	cpx     #$00
	bne     L00CB
	cmp     #$08
L00CB:	jsr     boolne
	jeq     L00CC
	ldy     #$0B
	jsr     ldaxysp
	cpx     #$00
	bne     L00CE
	cmp     #$08
L00CE:	jsr     boolne
	jne     L00C9
L00CC:	ldx     #$00
	lda     #$00
	jeq     L00CF
L00C9:	ldx     #$00
	lda     #$01
L00CF:	jeq     L00D7
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0F
	jsr     ldaxysp
	cpx     #$80
	lda     #$00
	ldx     #$00
	rol     a
	jsr     aslax1
	jsr     pushax
	ldy     #$13
	jsr     ldaxysp
	cmp     #$01
	txa
	sbc     #$00
	bvs     L00D6
	eor     #$80
L00D6:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jsr     tosaddax
	jsr     aslax1
	clc
	adc     #<(_diags)
	tay
	txa
	adc     #>(_diags)
	tax
	tya
	ldy     #$00
	jsr     ldauidx
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	ldy     #$07
	jsr     ldauidx
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosneax
	jeq     L00D9
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jne     L00D8
L00D9:	ldx     #$00
	lda     #$00
	jeq     L00DB
L00D8:	ldx     #$00
	lda     #$01
L00DB:	jeq     L00D7
	jmp     L009B
L00D7:	jsr     _P_Random
	cmp     #$C9
	lda     #$00
	ldx     #$00
	rol     a
	jne     L00DD
	ldy     #$0D
	jsr     ldaxysp
	jsr     _abs
	jsr     pushax
	ldy     #$11
	jsr     ldaxysp
	jsr     _abs
	jsr     tosgtax
	jne     L00DD
	ldx     #$00
	lda     #$00
	jeq     L00E0
L00DD:	ldx     #$00
	lda     #$01
L00E0:	jeq     L00DC
	ldy     #$09
	jsr     ldaxysp
	ldy     #$04
	jsr     staxysp
	ldy     #$0B
	jsr     ldaxysp
	ldy     #$08
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0A
	jsr     staxysp
L00DC:	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     toseqax
	jeq     L00EB
	ldx     #$00
	lda     #$08
	ldy     #$08
	jsr     staxysp
L00EB:	ldy     #$0B
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     toseqax
	jeq     L00F1
	ldx     #$00
	lda     #$08
	ldy     #$0A
	jsr     staxysp
L00F1:	ldy     #$09
	jsr     ldaxysp
	cpx     #$00
	bne     L00FA
	cmp     #$08
L00FA:	jsr     boolne
	jeq     L00F7
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L00F7
	jmp     L009B
L00F7:	ldy     #$0B
	jsr     ldaxysp
	cpx     #$00
	bne     L0104
	cmp     #$08
L0104:	jsr     boolne
	jeq     L0108
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$0C
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L0108
	jmp     L009B
L0108:	ldy     #$03
	jsr     ldaxysp
	cpx     #$00
	bne     L010D
	cmp     #$08
L010D:	jsr     boolne
	jeq     L0110
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L0110
	jmp     L009B
L0110:	jsr     _P_Random
	ldx     #$00
	and     #$01
	stx     tmp1
	ora     tmp1
	jeq     L0113
	ldx     #$00
	lda     #$00
	ldy     #$04
	jsr     staxysp
L0115:	ldy     #$05
	jsr     ldaxysp
	cmp     #$08
	txa
	sbc     #$00
	bvc     L011C
	eor     #$80
L011C:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L0118
	jmp     L0116
L0118:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosneax
	jeq     L0117
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L0117
	jmp     L009B
L0117:	ldy     #$05
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     incax1
	ldy     #$04
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L0115
L0116:	jmp     L0127
L0113:	ldx     #$00
	lda     #$07
	ldy     #$04
	jsr     staxysp
L0126:	ldy     #$05
	jsr     ldaxysp
	cpx     #$FF
	bne     L012E
	cmp     #$FF
L012E:	jsr     boolne
	jne     L0129
	jmp     L0127
L0129:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosneax
	jeq     L0128
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L0128
	jmp     L009B
L0128:	ldy     #$05
	jsr     ldaxysp
	sta     regsave
	stx     regsave+1
	jsr     decax1
	ldy     #$04
	jsr     staxysp
	lda     regsave
	ldx     regsave+1
	jmp     L0126
L0127:	ldy     #$01
	jsr     ldaxysp
	cpx     #$00
	bne     L0139
	cmp     #$08
L0139:	jsr     boolne
	jeq     L013C
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	ldy     #$07
	jsr     staspidx
	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_TryWalk
	tax
	jeq     L013C
	jmp     L009B
L013C:	ldy     #$11
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$08
	ldy     #$07
	jsr     staspidx
L009B:	ldy     #$12
	jsr     addysp
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_Look (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_Look: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	ldy     #$08
	jsr     ldauidx
	ldx     #$00
	and     #$20
	stx     tmp1
	ora     tmp1
	jne     L0143
	ldy     #$01
	jsr     ldaxysp
	ldy     #$06
	jsr     ldauidx
	jsr     pushax
	lda     _player
	ldx     _player+1
	ldy     #$06
	jsr     ldauidx
	jsr     toseqax
	jne     L0143
	ldx     #$00
	lda     #$00
	jeq     L0145
L0143:	ldx     #$00
	lda     #$01
L0145:	jeq     L0142
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	lda     _player
	ldx     _player+1
	ldy     #$0E
	jsr     staxspidx
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$01
	jsr     ldauidx
	jsr     pusha
	jsr     _S_StartSound
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$09
	jsr     ldauidx
	jsr     pusha
	jsr     _P_SetMobjState
L0142:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_Chase (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_Chase: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	ldy     #$09
	jsr     ldauidx
	jeq     L014F
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldauidx
	pha
	sec
	sbc     #$01
	ldy     #$09
	jsr     staspidx
	pla
L014F:	ldy     #$01
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     bnegax
	jne     L0153
	ldy     #$01
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$08
	jsr     ldauidx
	ldx     #$00
	and     #$04
	jsr     bnegax
	jne     L0153
	ldx     #$00
	lda     #$00
	jeq     L0155
L0153:	ldx     #$00
	lda     #$01
L0155:	jeq     L0152
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_LookForPlayers
	tax
	jeq     L0156
	jmp     L0182
L0156:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$08
	jsr     ldauidx
	jsr     pusha
	jsr     _P_SetMobjState
	jmp     L0182
L0152:	ldy     #$01
	jsr     ldaxysp
	ldy     #$08
	jsr     ldauidx
	ldx     #$00
	and     #$02
	stx     tmp1
	ora     tmp1
	jeq     L015C
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	and     #$FD
	ldy     #$08
	jsr     staspidx
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_NewChaseDir
	jmp     L0182
L015C:	ldy     #$01
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0B
	jsr     ldauidx
	jeq     L0164
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_CheckMeleeRange
	tax
	jne     L0163
L0164:	ldx     #$00
	lda     #$00
	jeq     L0166
L0163:	ldx     #$00
	lda     #$01
L0166:	jeq     L0162
	ldy     #$01
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$04
	jsr     ldauidx
	jeq     L0167
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$04
	jsr     ldauidx
	jsr     pusha
	jsr     _S_StartSound
L0167:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0B
	jsr     ldauidx
	jsr     pusha
	jsr     _P_SetMobjState
	jmp     L0182
L0162:	ldy     #$01
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0C
	jsr     ldauidx
	jeq     L016F
	ldy     #$01
	jsr     ldaxysp
	ldy     #$0A
	jsr     ldaidx
	jeq     L0171
	jmp     L016F
L0171:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_CheckMissileRange
	jsr     bnega
	jeq     L0174
	jmp     L016F
L0174:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$0C
	jsr     ldauidx
	jsr     pusha
	jsr     _P_SetMobjState
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	ora     #$02
	ldy     #$08
	jsr     staspidx
	jmp     L0182
L016F:	ldy     #$01
	jsr     ldaxysp
	sta     ptr1
	stx     ptr1+1
	ldy     #$0A
	ldx     #$00
	lda     (ptr1),y
	sec
	sbc     #$01
	sta     (ptr1),y
	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jne     L017D
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_Move
	jsr     bnega
	jne     L017D
	ldx     #$00
	lda     #$00
	jeq     L017F
L017D:	ldx     #$00
	lda     #$01
L017F:	jeq     L017C
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_NewChaseDir
L017C:	ldy     #$01
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$02
	jsr     ldauidx
	jeq     L0184
	jsr     _P_Random
	cmp     #$03
	jsr     boolult
	jne     L0183
L0184:	ldx     #$00
	lda     #$00
	jeq     L0185
L0183:	ldx     #$00
	lda     #$01
L0185:	jeq     L0182
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0D
	jsr     ldaxidx
	ldy     #$02
	jsr     ldauidx
	jsr     pusha
	jsr     _S_StartSound
L0182:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ R_PointToAngle (int, int)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_R_PointToAngle: near

.segment	"CODE"

	ldy     #$03
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L018A
	ldy     #$01
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L018C
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L018E
	ldx     #$00
	lda     #$00
	jmp     L0189
	jmp     L0195
L018E:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L0192
	ldx     #$00
	lda     #$02
	jmp     L0189
	jmp     L0195
L0192:	ldx     #$00
	lda     #$01
	jmp     L0189
L0195:	jmp     L01A1
L018C:	ldy     #$01
	jsr     ldaxysp
	jsr     negax
	ldy     #$00
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L019A
	ldx     #$00
	lda     #$00
	jmp     L0189
	jmp     L01A1
L019A:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L019E
	ldx     #$00
	lda     #$06
	jmp     L0189
	jmp     L01A1
L019E:	ldx     #$00
	lda     #$07
	jmp     L0189
L01A1:	jmp     L01BB
L018A:	ldy     #$03
	jsr     ldaxysp
	jsr     negax
	ldy     #$02
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	txa
	jsr     boolge
	jeq     L01A6
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L01A8
	ldx     #$00
	lda     #$04
	jmp     L0189
	jmp     L01AF
L01A8:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L01AC
	ldx     #$00
	lda     #$02
	jmp     L0189
	jmp     L01AF
L01AC:	ldx     #$00
	lda     #$01
	jmp     L0189
L01AF:	jmp     L01BB
L01A6:	ldy     #$01
	jsr     ldaxysp
	jsr     negax
	ldy     #$00
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L01B4
	ldx     #$00
	lda     #$04
	jmp     L0189
	jmp     L01BB
L01B4:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldx     #$00
	lda     #$02
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     tosmulax
	jsr     tosgtax
	jeq     L01B8
	ldx     #$00
	lda     #$06
	jmp     L0189
	jmp     L01BB
L01B8:	ldx     #$00
	lda     #$05
	jmp     L0189
L01BB:	ldx     #$00
	lda     #$00
	jmp     L0189
L0189:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_FaceTarget (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_FaceTarget: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     bnegax
	jeq     L01BF
	jmp     L01BE
L01BF:	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	and     #$F7
	ldy     #$08
	jsr     staspidx
	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	jsr     _R_PointToAngle
	ldy     #$07
	jsr     staspidx
L01BE:	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_PosAttack (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_PosAttack: near

.segment	"CODE"

	jsr     decsp4
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     bnegax
	jeq     L01C8
	jmp     L01D8
L01C8:	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	jsr     _A_FaceTarget
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	lda     #$01
	jsr     pusha
	jsr     _S_StartSound
	ldy     #$05
	jsr     ldaxysp
	ldy     #$01
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$01
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	ldy     #$03
	jsr     ldaxidx
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	ldy     #$03
	jsr     ldaxidx
	jsr     tossubax
	jsr     pushax
	jsr     _P_ApproxDistance
	ldy     #$00
	jsr     staxysp
	ldy     #$01
	jsr     ldaxysp
	cmp     #$DD
	txa
	sbc     #$00
	bvs     L01D5
	eor     #$80
L01D5:	asl     a
	lda     #$00
	ldx     #$00
	rol     a
	jeq     L01D3
	ldy     #$01
	jsr     ldaxysp
	cpx     #$00
	bne     L01D7
	cmp     #$DC
L01D7:	jsr     booleq
L01D3:	jsr     _P_Random
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	jsr     tosugtax
	jeq     L01D8
	jsr     _P_Random
	ldx     #$00
	and     #$03
	jsr     incax2
	jsr     mulax3
	ldy     #$02
	jsr     staxysp
	ldy     #$05
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	ldy     #$09
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_DamageMobj
L01D8:	jsr     incsp6
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_TroopAttack (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_TroopAttack: near

.segment	"CODE"

	jsr     decsp2
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     bnegax
	jeq     L01E4
	jmp     L01E8
L01E4:	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	jsr     _A_FaceTarget
	ldy     #$03
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_CheckMeleeRange
	tax
	jeq     L01E8
	jsr     _P_Random
	ldx     #$00
	and     #$07
	jsr     incax1
	jsr     mulax3
	ldy     #$00
	jsr     staxysp
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     pushax
	ldy     #$05
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	ldy     #$07
	jsr     ldaxysp
	jsr     pushax
	jsr     _P_DamageMobj
	jmp     L01E8
L01E8:	jsr     incsp4
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_Fall (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_Fall: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$08
	jsr     ldauidx
	and     #$EF
	ldy     #$08
	jsr     staspidx
	jsr     incsp2
	rts

.endproc

; ---------------------------------------------------------------
; void __near__ A_Explode (__near__ struct mobj_T*)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_A_Explode: near

.segment	"CODE"

	ldy     #$01
	jsr     ldaxysp
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	ldy     #$0F
	jsr     ldaxidx
	jsr     pushax
	ldx     #$00
	lda     #$80
	jsr     pushax
	jsr     _P_RadiusAttack
	jsr     incsp2
	rts

.endproc

