# Memory configuration for the VIC-20 with 32K RAM Cartridge
# Contributed by Stefan Haubenthal
# Modified for Doom by Kweepa
MEMORY {
    ZP: start =  $0002, size = $001A, type = rw, define = yes;
    STACKCODEMEM: start = $100, size = $A0, define = yes, file = "stackcode";
    SLUTS: start = $400, size = $240, define = yes, file = "sluts";
    LOWCODEMEM: start = $640, size = $9C0, define = yes, file = "lowcode";
    STARTRAM: start = $11FF, size = $201, fill = yes, define = yes, file = %O;
    UDG: start = $1400, size = $400, define = yes, file = %O;
    RAM: start = $1800, size = $6000, define = yes, file = %O;
    HILUTMEM: start = $7800, size = $800, define = yes, file = %O; # for now we're going to generate the table
    TEX: start = $A000, size = $D00, define = yes, file = "textures";
    HICODEMEM: start = $AD00, size = $100, define = yes, file = "hicode";
    MAPMEM: start = $AE00, size = $970, define = yes, file = "e1m1";
    MUSICMEM: start = $B750, size = $320, define = yes, file = "e1m1mus";
    SOUNDMEM: start = $BA70, size = $370, define = yes, file = "sounds";
}
SEGMENTS {
    STARTUP:  load = STARTRAM, type = ro;
    UDGS:     load = UDG, type = rw;
    TEXTURES: load = TEX, type = ro;
    LUTS:     load = SLUTS, type = ro;
    MAPDATA:  load = MAPMEM, type = ro;
    MUSIC:    load = MUSICMEM, type = ro;
    SOUNDS:   load = SOUNDMEM, type = ro;
    STACKCODE: load = STACKCODEMEM, type = rw;
    LOWCODE:  load = LOWCODEMEM, type = rw;
    HICODE:   load = HICODEMEM, type = rw;
    HILUTS:   load = HILUTMEM, type = rw;
    INIT:     load = RAM, type = ro, define = yes, optional = yes;
    CODE:     load = RAM, type = ro;
    RODATA:   load = RAM, type = ro;
    DATA:     load = RAM, type = rw;
    ZPSAVE:   load = RAM, type = bss;
    BSS:      load = RAM, type = bss, define = yes;
    HEAP:     load = RAM, type = bss, optional = yes; # must sit just below stack
    ZEROPAGE: load = ZP,  type = zp;
}
FEATURES {
    CONDES: segment = INIT,
	    type = constructor,
	    label = __CONSTRUCTOR_TABLE__,
	    count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = destructor,
	    label = __DESTRUCTOR_TABLE__,
	    count = __DESTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
	    type = interruptor,
	    label = __INTERRUPTOR_TABLE__,
	    count = __INTERRUPTOR_COUNT__;
}
SYMBOLS {
    __STACKSIZE__ = $100; # 256 byte stack
}
